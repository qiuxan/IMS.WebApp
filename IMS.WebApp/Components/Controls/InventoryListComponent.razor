
@inject  IViewInventoriesByNameUseCase ViewInventoriesByNameUseCase

<table class="table">
    <thead>
        <tr>
            <th>Inventory Name</th>
            <th>Inventory Quantity</th>
            <th>Inventory Price</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (inventories is not null && inventories.Count > 0)
        {
            @foreach (var inventory in inventories)
            {
                <InventoryListItemComponent Inventory="inventory"></InventoryListItemComponent>
            }
        }
    </tbody>
</table>


@code
{
    [Parameter] 
    public string? SearchInventoryFilter { get; set; }
    private List<Inventory>? inventories;

    protected override async Task OnInitializedAsync()
    {
        inventories = (await ViewInventoriesByNameUseCase.ExcuteAsync(SearchInventoryFilter??string.Empty)).ToList();
    }
}