
@inject  IViewInventoriesByNameUseCase ViewInventoriesByNameUseCase

<table class="table">
    <thead>
        <tr>
            <th>Inventory Name</th>
            <th>Inventory Quantity</th>
            <th>Inventory Price</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (inventories is not null && inventories.Count > 0)
        {
            @foreach (var inventory in inventories)
            {
                <tr>
                    <td>@inventory.InventoryName</td>
                    <td>@inventory.Quantity</td>
                    <td>@inventory.Price</td>
                    <td>
                        <button class="btn btn-light">Edit</button>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>


@code
{
    private List<Inventory>? inventories;

    protected override async Task OnInitializedAsync()
    {
        inventories = (await ViewInventoriesByNameUseCase.ExcuteAsync("")).ToList();
    }
}