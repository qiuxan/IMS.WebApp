@page "/editinventory/{invId:int}"

@inject IViewInventoryByIdUsecase ViewInventoryByIdUsecase
@inject  IEditInventoryUseCase EditInventoryUseCase
@inject NavigationManager NavigationManager

<h3>EditInventory</h3>

<br />

@if (this.inventory is not null)
{
    <EditForm Model="inventory" FormName="formInventory" OnValidSubmit="Update">

        <DataAnnotationsValidator />
        <ValidationSummary />

        <InputNumber @bind-Value="inventory.InventoryId" hidden></InputNumber>

        <div class="form-group">
            <div>
                <label for="inventoryName" class="form-label">Inventory Name</label>
                <InputText id="inventoryName" class="form-control" @bind-Value="inventory.InventoryName"/>
                <ValidationMessage For="()=>inventory.InventoryName"></ValidationMessage>
            </div>

            <div>
                <label for="quantity" class="form-label">Quantity</label>
                <InputNumber id="quantity" class="form-control" @bind-Value="inventory.Quantity"/>
                <ValidationMessage For="()=>inventory.Quantity"></ValidationMessage>

            </div>

            <div>
                <label for="price" class="form-label">Price</label>
                <InputNumber id="price" class="form-control" @bind-Value="inventory.Price"/>
                <ValidationMessage For="()=>inventory.Price"></ValidationMessage>

            </div>
            <br/>
            <button type="submit" class="btn btn-primary">Update Inventory</button> &nbsp;
            <a href="/inventories" class="btn btn-secondary">Cancel</a>

        </div>

    </EditForm>

}

@code {
    [Parameter]
    public int invId { get; set; }

    [SupplyParameterFromForm] 
    private Inventory? inventory { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        this.inventory ??= await ViewInventoryByIdUsecase.ExecuteAsync(this.invId);
    }

    private async Task Update()
    {
        await EditInventoryUseCase.ExecuteAsync(inventory);
        NavigationManager.NavigateTo("/inventories");
    }

}
